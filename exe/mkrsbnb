#!/usr/bin/env ruby
# frozen_string_literal: true

require "thor"

module Mkrsbnb
  # The CLI interface
  class Command < Thor
    desc "collect", "Collect HAR"
    method_option :file, aliases: "-f", desc: "File name of the output", default: "out.har"
    method_option :addon_dir, aliases: "-A", desc: "Path to a directory to find add-ons", default: Dir.pwd
    method_option :log_level, aliases: "-l", desc: "Log level: info, warn, debug", default: "info"
    method_option :headless, aliases: "-H", type: :boolean, desc: "Run the browser in headless mode", default: true
    method_option :location, aliases: "-L", type: :string, desc: "Location to search",
                             default: "Krong-Siem-Reap--Siem-Reap--Cambodia"
    method_option :max_price, aliases: "--max", type: :numeric, desc: "Maximum price", default: 30
    def collect
      require "mkrsbnb/task/airbnb_search"
      opts = {}
      options.each_pair do |k, v|
        opts[k.to_sym] = v
      end
      task = Mkrsbnb::Task::AirbnbSearch.new(opts)
      task.run
    end

    desc "csv", "Parse a HAR file and generate CSV file"
    method_option :file, aliases: "-f", type: :string, desc: "HAR file to read", required: true
    method_option :out, aliases: "-o", type: :string, desc: "CSV file", default: "-"
    method_option :include_zero_reviews, type: :boolean, desc: "Include listings with zero review", default: false
    def csv
      require "mkrsbnb/task/make_csv"
      task = Mkrsbnb::Task::MakeCSV.new(file: options[:file], csv_file: options[:out],
                                        reject_no_review: options[:include_zero_reviews])
      task.run
    end
  end
end

Mkrsbnb::Command.start
